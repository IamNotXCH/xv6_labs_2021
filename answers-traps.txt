     Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

A:a0-a7;a2

    Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?

A:在main中并没有调用f，很显然编译过程中出现了一定的过程展开的优化（内联展开）

    At what address is the function printf located?

A:函数地址是00000628

    What value is in the register ra just after the jalr to printf in main?

A:


image-20230708203225653


ra是返回地址，所以在执行之后返回地址是下一条指令的地址为00000038

    Run the following code.
    ``` unsigned int i = 0x00646c72; printf("H%x Wo%s", 57616, &i);
    ```
    What is the output? Here's an ASCII table that maps bytes to characters.
    The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

A:

    57616转换成16进制是e110， 而646c72按小端法从低地址到高地址按入下表转换为rld，所以输出是He11o，World


ascii表


    大端法需要改成：0x726c6400。
    大端法不需要更改57616。

    In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
    printf("x=%d y=%d", 3);

A：参考call.asm的代码，printf的参数会放在a1-a7里。在这里a1会存储3，而a2存储的值是随机的，所以y的值是随机的